오후 2:31 2020-11-29
key

쟈 비었나 확인
쟈 획득
쟈 획득성공반환

--
쟈획득(토큰)
쟈가 프리하면,획득.
안프리하면,쟈 주인이 일치하면,통과.

쟈획득(토큰)
쟈가 프리
쟈 주인이 유저네임

쟈 쥬인이 유저네임이랑 다름

리턴 쟈-키.

다르면 에러발생?-이거여도 load상태라 ㄴㄴ.
200만 받아들이게?이건 좋네.
ㅇㅇ 200이면 들어왔단거니, 키를 변수에 저장.
아니면,메세지출력.ㅇㅋ.

연속으로 두번 눌러서 비동기처리된경우
..여도 js측에서 괜찮으려나..?
아.연속으로 두번눌리면, 2번째에서 튕기게 됨.ㅇㅋ.
1번이 어떻게든 자동처리되는걸로 완료겠지.ㅇㅋ.

return "jar busy! 
by {}, from {}, remain time: {}"
(jarinfo[0],jarinfo[1], (10+jarinfo[2])-(intsec()-jarinfo[1]) )
;

xml img 랑 text있는데,
심플하게 uploadkey만 제공되면되겠어.아주좋고.

img는 iter붙여서가고

titletext가 필요할까??
mkdir때 필요한건데,,이거하나면..애매하군.

titletext는 제거 가능해보인다. jar때 바로 갖다줄까싶음.

jar[4]가 upzipdir이면되잖아 싶은것.
mkdir도 처음 쟈 승인때 바로 만들어버리고

파일을,그러면 그냥바로 저장하면될듯.ㅇㅋ.

title도 빼는게낫다.ㅇㅇ.

ext = splitext(f.filename)[1]
    sname =  iter+ext
    

    if titletext == "":titletext = "no title"
    titletext=titletext[:30]
    sname = tidyName(
    unzipdir = join(jar_dir,sname)
    makedirs(unzipdir, exist_ok=True)

그..zipsize를 미리 잡진 못하겠군. 예상치라. 어쩔수없지.ㅇㅋ.

업로드키에서:
1.비었고,얻었다
2.안비었고,나다
3.안비었고,다른나다
4.안비었고,다른사람이다

data = { 'token': token, 'username':username }
는는이고
메세지는 스트링이고,
return에서 jsonfy한걸 보낼수있지싶어.ㅇㅋ.

-노네임이면,튕기게한다.

겟키가 키면,잘얻어졌으면, 그걸 리턴한다.
메세지는,성공.

겟키가 ""면, 잘안되었으니,메세지제조해서보낸다.ㅇㅋ.

data = { 'token': token, 'username':username }
    return jsonify(data)

하..이러면 zip이랑 그거랑 dir가 다르잖아요.
그런가요?

zip의 경우
img,txt인경우

zip은얌전히하고, 단일만화의 묶음인경우에만 dir생성이필요.

글작성
imgtxt인경우가 특이하게도 title로 폴더만들어져서들어감.

즉,단일만화묶음, 글작성인경우에만 dir생성이요구됨.

est가문제인데,,
권한얻어오는순간, 딱히 뭐랄게없어져버려.

이건 물론, zip 받는시점에서 추가하지뭐.ㅇㅋ.
연장하거나.


get이 지금 비동기로 들어간다.심히 곤랗내졌군

1.버튼누름.
2.key 있나 체..크고뭐고 잠그기부터 해야지. key 얻기().
3.응답이 뒤늦게 들어온다. 얼럿 뜨거나, 이후 진행됨.

3-2. 응답시, parse해서, key를 얻는다. ""면 진행하지않고
""가 아니면,업로드 수행.ㅇㅋ.

대충되었다.
문제는, get key를 수행시, 이후에야 처리가된다.어쩌지?
fetch 라이브러리를 쓸까??
일단 함수두개두기.


오후 6:47 2020-11-29
대충되었고
1.jpg 1.png는 어쩔수없지,.
애초에 그리고 세션에서 단일밀폐처리됨이 보장되어야.ㅇㅋ.

지금은 텍스트업이 수행되어야 언락쟈.
이미지만하면안됨.
흠.. ""라도 보내기로!

fileallcheck가 트루면, 텍스트를 수행하게 했다.왜지?
텍스트를 마지막에 해야, 그게 보증되니까. 아하..
텍스트가 종결메세지 역할을 해서 그렇다.
ㅇㅋ.

이벤트시,load가 발생되어야 수행되므로.ㅇㅋ.

uploadfile에서,
파일이없으면 txt를바로보내기르래혿되나,지금이낫다.ㅇㅋ.

즉 이러나저러나 uploadtxt는 수행되는것.ㅇㅋ.

아.30초제한연장.아..

서버측에서 zip파일받았으면 용량만큼 + 가능.ㅇㅋ.
이미지는? 30개 들어온경우,, iter가 늘어나는것으로검출되며..
개당5초.굿. 그전에되면 언락됨.ㅇㅋ.

10메가면, 15초걸린다고한다.
2배로넣지뭐.
1기가면 2000초니까 나름 맞는다.

오후 7:02 2020-11-29
일단된듯함.

드디어,드디어 getjar인가?

zip은 중간에 내가또눌러도든든함.
zip하는중간에 밑의것 눌러도 잘 됨!

556초.자동취소가안됨.너무불어났어.
zip 들어온순간 늘어서 그런가?

27이 2배수니까,, 30*2=60초증가.괜찮은데..
이미지 10배수증가로 20씩 증가하는거였다.!
27이면 270으로 540정확히나오네요.

127.0.0.1 - - [29/Nov/2020 19:04:36] "[31m[1mPOST /xmltext HTTP/1.1[0m" 403 -
이게왜뜨는걸까.
아.이미있던파일.ㅇㅋ.
그러면 확실히 문제되겠네요.

27개 올리고 잽싸게 zip 누르니, 비지뜨고 에러제대로뜬다.
txt쓰기가거부당함.내용없을시인가?

txt 하는직후에, key가 새롭게 발생하는듯.동의함.
ㄴㄴ.동의못함.

그..js가 현재가진걸보내는데,
누른순간 급히 누르니까, ""로 덮여버린다.그래서발생함.ㅇㅋ.

하지말라해야지.어휴;

재빠르게누른경우,키가 초기화 되어야 한다.
그렇지않으면, 키 보존시 그대로 다시들어가니.ㅇㅋ.

datetime.datetime.utcfromtimestamp(1606644954)
datetime.datetime(2020, 11, 29, 10, 15, 54)
후후후후후후후후후후후후후
utc안붙었다.ㅇㅋ.

datetime.datetime.utcfromtimestamp(1606644954+(9*3600))
datetime.datetime(2020, 11, 29, 19, 15, 54)
귀찮아서이걸로함.타임스탬프란건 명확하고.

jar busy! by 나노하, from 2020.11.29 19:24:57, remain time: 29
제대로되네.ㅇㅋ.
zip이 이미있으면 튕김.이건어쩔수없고..
근데 이상태에서 수행시, 도무지불가능하다.
위험하지만 처음 init때 jar 비울까싶다..

일단이미있으면 진짜 해결 불가긴 해.
..는아니고,다른걸 얌전히 업로드하면됨.ㄱㄱ.

오후 7:27 2020-11-29
됨.
아.

진짜 이젠 getjar뿐인가?!


오후 7:38 2020-11-30
게시판만들기는 html과 css랑 같이가야하니 나중에.
모듈덩어리 짧게 갖추도록 하시고.

박스는 id로 지정할순없고, 우선순위지정을 클래스로하지싶은데.. ㅇㅋ..

getjar들어간다.
1일단 getjar로 처리하고,
2이후 업로더,업로드시간,,, 이 두개를 채워넣고
3 db양식을 하나 생성하고,update해서 덮어씌운다..

2번에서 getjar에서 이전의dict를 참조하게해서, 중복을 방지하고.

여기서 의문이, id를 유지하느냐 파기하느냐의 문제였는데요,
매번새로랜덤이라면,크롤링결과물이 썩 취약해져. 중복가능성이있다.

오후 7:47 2020-11-30
newdb, 생각보다 거대했다. 내가 대체 뭘 만들어둔거지;
태그입력같은지저분한걸 다 빼버리니 너무 편해짐.휴.

getjar에서 newdict가 나오고,, 연합체이다. id로 구성된 dict.
id가 기존에있는거면 안 넣어야지.크롤러의결과물이면 그게 타당하다.동의함.
동의.
ㄱㄱ.
업로더는,넣는게지극히타당하므로논의의여지가없다.
업데이트는 그냥직접넣는걸로우선ㄱ.
업로드시간을,밀어넣어야하지싶다..?아니면 db에서내부처리.. 내부처리.ㅇㅋ.

작성자
날짜
본문
은 x임에 동의 함..   ..작성자가 ""면 업로더로 채워넣기는?이게좋지싶은데-
근데 크롤러라는개념상 분명히 구분되긴한다.ㅇㅇ.

날짜도 그렇고.
논의:

업로더
업로드일시
작성자
날짜

head는 램에만 보유하고있는다..훌륭히 좋군.

크롤러결과의 작성자는 무의미하다.숨겨두고,쓰지 말자.동의하고.
원글사람이 삭제를 요청하는경우에나 쓰이겠지뭐.ㅇㅋ.
업로더가 모든 일을 수행하므로.ㅇㅋ.

업로드일시는,최신글일때 유용하나, 날짜순정렬엔.. 그러나유용하다?!

과거의글보기를 위해선 크롤러의 유지가 필수.

1.현재의 만화보기		그나마업로더니까,업로더를 버리기로.
2.개념글스캐너과거의기록열람소	-업로더는무의미함. 업로드일시도그럼.

3.그냥사람들이 우르르올리는만화. -업로더가 전적으로 지배됨. 크롤러안씀.

크롤러쓰는경우, 과거글의 올라오던시점이 기록된다.이건 유의미함.
글쓴이는 대량삭제를위해서만 필요함.ㅇㅋ.

글작성일: 과거아카이브시 필요함.
업로드일: 현재사람들이쓰는거면 필요함.

이게 극명히 갈린다.

1.중복제목거부정책을 적용, 제목을 id로 할당.
2. 크롤러만 단독모드로-id중복거부 를 채택함..

현재정책:크롤러인경우 id중복거부.

아.애초에,크롤러인경우 날짜랑 글쓴이가 ""가 아니다 라는 조건이 붙어.그걸로 ㄱ.

------------------------------------
1.날짜 를 이용함. 그걸로정렬한다. 날짜가비었으면, 크롤링된게 아니므로, 덮어쓴다.
2.글쓴이 는 요청받을때 삭제를위해서만. 공개되지않음.
3.업로더는, 자기가 업로드한거만 보기 위해.공개되지 않음.

이 경우, 새로 추가된 과거의 글 을 볼수가 없다.어떻게하지?
처음 제공되는 기본 sort목록을, 업로드순으로 정렬해서 제공하자.그걸로 좋을듯.ㅇㅇ.

아니면 헤드에 new= 1 을 추가해서, 그거먼저 정렬하게하거나.이게좋을듯.

섞임의 문제! 크롤러와 일반업이 혼종인경우.실제로 가능하다...인데 가능한가??
불가능!ㅇㅋ.
의도적으로 구분하고,한 곳에 담지 마세요!

만약,시간 항목이 비었으면, 업로드타임으로 대체한다..려나?
혹은,headdict이므로, 가져오기만 빼돌려도되겠다.
일단 평등하게 기록하되,, 

헤드딕트에서, 소설의경우의 문제.
따로함이옳다.
getjar도 지금은 본문을 끌어오므로.동의한다.ㅇㅋ.

100키로짜리가 100개 있어도, 고작 10메가이긴한데말야.
근데 100키로짜리 1000개면 얘기가 좀 다르긴 하지. 100메가니까. 흠..
일단은 근데 그거 감수하고서라도 그냥 같은체계로 운용하는게 나아보여.

통상 램이 최소 1기가라서 근데 괜찮아보이긴함.
ㄱㄱ.진행한다. 솔직히 그리고 텍스트 아카이브가 100메가 넘으면 그게 이상한거지.말이 안 돼.

이게 싫으면, db이용하세요!라고 하자..
..그런면에서 db는 파일읽기가 그토록 빠른가?? 신기하네. ssd면 이해는된다만..
jpg 파일 보내는거 보면 납득은 된다.

소설의헤드딕트는 그럼 본문일부를..렌더링해서..는정신나간거같고..근데이게낫나진짜;; 아무튼차차.

ㄴㄴ.애초에 소설의썸네일이 왠말이냐.제목으로 충분하다고 넘겨짚도록 하자.ㅇㅋ.

그럼,헤드딕트는,날짜 를 기준으로 채우되, 날짜가 "" 면, 업로드일시를 채워넣는다..면 되나?
동의 함. 이후엔 sort의 문제니까.ㅇㅋ.
즉,getjar에선 기록을 최대한 raw하게할뿐.ㅇㅋ.

resizer:no img!
2020.11.30 20:50:10:,jar,(Exception('empty dir! : jar'), ':at line', 182)
그..잘되었다고하니주의하자. 에러로그를띄워줘야.

200리턴시,성공!을 띄우게된다. 다행히도 메세지를띄운다.

jarerrlist를 띄워야겠어. 성공:len(newdict) 하고.

 "태그": [
                "작가:ガリアブス"
            ],
태그 왠지 되어있네;; 인데 이거 규격바꿔야겠다.ㅇㅋ.

time = 
user = 
text = 
userinfo = newdb.setuserinfo(time,user,text)
board = 
id = 
key = newdb.tag_key
newdb.add(board,id,key,userinfo)

너무 길다.

addtag( board, id,  user, time, text )
db[board].addtag( id, user,time,text )
이쯤되니 사실 큰 차이는 없네요..네.

time을 표준 intsec으로 넣어야겠지??
str넣긴 진짜너무하다.
타임스탬프면 문제가 표기랑달라.검색이불가해짐.
열람시편의.
가공이라는것
비교시의속도.

실제값으로하자.ㅇㅋ.
11-20보다 11-4면 더 앞서게된다의문제..는없겠지.2시간뒤 알아보고.

'2020.11.30 23:43:16'
'2020.12.01 00:03:31'
문제없겠지.
'2020.11.04 23:43:16'
문제없는듯하다.

db내부기록만 스탬프로하던가하라하고,
외부에서 기록시엔 datestr쓰자. 아니 이걸 표준화할까싶은데..

댓글은? 이러면 1초가 겹치게 된다.
headcheck때만 버전기록을위해 millisec이 남게 되고
그 외엔 없음을확인.ㅇㅋ.

int를어디다쓰는거였지그럼; 남은시간: ㅇㅋ.
그.. db내엔 시간 안 두는게 타당하다 여겨서, 그냥입력하기로함.ㅇㅋ.

오후 10:24 2020-11-30
보드 내의 글 삭제도 해야겠다.

그..센세) 가 있으면 제목에서 추출해서 태그로 넣는걸, jar에서 분리한다!
굉장히 혁신적이지만 이해가되네.ㅇㅋ.

그럼 jar에서 [번역] 을 제거하는것은요????
흠..........................................
플라스크에서해도된다고생각함.ㅇㅋ..

되-게 깔끔해짐.ㅇㅋ.

subarticle 이 있고, del id 인데, 파일지움이없다.
삭제시,삭제해야지.ㅇ.

근데 db에선 철저히 밀폐되어 동작함. 플라스크에서지우자.ㅇㅋ.

지우기.일단함수로갖춰두고.
와...이것도 db였으면 그냥 이대로 제거하는순간 파일까지 같이날아가는군.

def subarticle():
    newdb.subarticle(board,id)
    rmtree(noDir)
이렇게있는경우 1번에서 에러뜨면, 계속 수행한들 지울 수가 없다.곤란.

오후 10:45 2020-11-30
아.
board는, 그거구분이없네.아...
imgtower 안에, board구분이 없이, 바로 id로 적재된다.어쩌지?
1.id는 그냥 전량 랜덤으로 전환.
2.preventset을, 
getjar때, id는 번호 에서 검출되며, 이미한번호set 에서 prevent된다.
...해결!

 "_a87e17e3-8099_1.jpeg",

이게문제인데, 제목_---로 바꿀까?
그럼 너무 취약해질거야.반대함.
다운하기시,파일명변환정도는되겠지.안될리가없어요!
ㅇㅋ.겹침문제도이렇게사라짐.

prevent셋은 init때 시행되며, db로드한후에, 전체를 for돌리면서
get()했는게 None이 아니면, 그걸 set에 적재한다.ㅇㅋ.

이러면,,어쨌든지운경우,,,글삭제되었으므로.. 다시 set 순회하면 다시가능함.
zip수행시 이걸 매번 해 줘야겠군.쳇.

아니면 크롤러가 너무 특수한 상황이잖아. ㅇㅇ그렇지?
그러니 크롤러 모드를 따로 두자.그게 썩 현명하겠다.
zipupload 시퀀스때 근데 받는게 따로니까 썩 귀찮긴 하지만.ㅇㅇ.소스같음.

zip타입에,크롤러를.어때.


            "작성자": "",
            "날짜": "",
            "본문": "",
그리고 왠 지 이거붙는다.지우길. -이거 newdb에서 ""로 선언하고본다. None대신 이걸로접촉.ㅇㅋ.

1.위의것.
2.크롤러 zip모드를 따로 둘까싶다. preventset을 내고.. 불필요정보제거..

근데낭비같다.그냥하지말지싶어.ㅇㅇ. set은 매번내냐그럼??
3.id는 해시로. 단지 크롤러된거면 번호:해서 남겨버리기.
ㄴ이경우, 다른게시판의 글은 충돌 발생함. 좀 심각하지않나;
ㄴ예를들어, 소규모 1000개 글 아카이빙시,바로문제됨.ㅇㅇㅇㅇㅇㅇ.
ㄴ그래서밀폐하기로한건데말야. 그럼 imgtower도 밀폐할까?
ㄴ이러느니db썼다!



오후 10:57 2020-11-30
고착같으므로 접기. 극효율유지를 원하는것이야.
내일할것.
preventset순회채집기. 해당 보드에서의 채집을..한..다.. 하..보드별로 이것도달리해야하네.
ㄴ그냥 즉석에서할까싶은데?ㅇㅇ그게나을듯.
ㄴ그러면 id별로구분하자.ㅇㅇㅇ동의함.

--아하. imgtower를 board별로 구분하자.그럼될듯함.
근데 이게 getjar에서 수행되는거잖아. 바로들어가고.자동화되어있지. 진짜오지군;

크롤러보관소를 단 하나의 갤러리만 두면 어때. 나쁘진않아보임.. 인데 솔직히몰겠다.ㅇㅇ..하..
아하.그냥 preventset을 두지 말자.그럼 모든 문제가 해결됨.동의하고. id는 해시로.ㄱㄱㄱㄱ.
ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
ㅇㅇ어떻게든 번호리스트만 보유하고있으면 됨.
그리고 정밀하게 페이지 반영해서.ㅇㅇ그럼될듯.

donelist를 어떻게든 보유하고있어야한다,그러면.중요한 문제로군!
ㄴㄴ.크롤링하면 결과가 폴더인데, 이걸 번호순정렬해서짜르면됨.ㅇㅋ.해결.ㅇㅋ.

---다좋은데, 이러면 게시글만보고 번호가..이거인지..는..제목으로 걸러서 짜르지뭐.ㅇㅋ.
---시나리오
1.음.. ---제목인 글이 올라와있군..이거이후로 크롤링해야겠어..
2.음...대충돌리고... 음..---제목인글은 ---번이구만.. 이 번호 위로만 잘라야겠어.
3.잘라내기.끝.

글쓰기절차가 고작 10초정도 걸리므로, 그냥 중복업 사람이 하게 하자.
자동크롤링하기엔 너무 세밀해지고, 애초에 대량크롤러라서 본 목적과 어긋남.동의하고.

차라리,, url을 주고, text, img 받아오는 미니 크롤러를 따로 두고, 그걸수행하게하자.오.
...되게하기싫겠다.

근데 url만입력해서 자동으로 들어가면,그건나름멋진건맞지만, 진짜하기싫음;
ㅇㅇ애초에 이게목적이아니라고.

1시간이 3600초잖아. 360번 하면  순이익이 나는지점인데, 이러면 그냥 사람이 하게 하지.

오후 11:06 2020-11-30
다음으로.
아무튼
.. 번호 완전해시화. preventset은, 안 두고,(게시판겹침문제로.) 그냥 자유업로드하게함.
사람이 수동으로 이번호전까지..라고 끊자.
..이러면 기능전체가 버려지는게생기는데, 하 시간완전날아가는군!

.id는 해시로. 사람이거르도록.
크롤러zip모드고뭐고없다.ㅇㅋ.

